name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/finto:latest
          file: ./Dockerfile
          build-args: |
            JAR_FILE=build/libs/FinTo-0.0.1-SNAPSHOT.jar

      - name: Copy docker-compose.yml to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}

          proxy_host: ${{ secrets.BASTION_HOST_IP }}
          proxy_username: ubuntu
          proxy_key: ${{ secrets.EC2_SSH_KEY }}
          source: "./docker-compose.yml"
          target: "/home/ubuntu"

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}

          proxy_host: ${{ secrets.BASTION_HOST_IP }}
          proxy_username: ubuntu
          proxy_key: ${{ secrets.EC2_SSH_KEY }}

          script: |
            docker-compose -f docker-compose.yml down
            docker-compose -f docker-compose.yml pull
            docker-compose -f docker-compose.yml up -d
            
      - name: Configure AWS credentials (optional - for future ASG support)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
        continue-on-error: true

      - name: Trigger ASG Instance Refresh (optional)
        run: |
          aws autoscaling start-instance-refresh \
            --auto-scaling-group-name FinTo-app-Auto-Scaling-Group \
            --preferences MinHealthyPercentage=50,InstanceWarmup=300 || echo "ASG refresh skipped"
        continue-on-error: true